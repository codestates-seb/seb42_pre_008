spring:
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:mem:test
  jpa:
    hibernate:
      ddl-auto: create  # (1) ??? ?? ??
    show-sql: true      # (2) SQL ?? ??
    properties:
      hibernate:
        format_sql: true  # (3) SQL pretty print
  sql:
    init:
      data-locations: classpath*:db/h2/data.sql
  security:
    oauth2:
      client:
        provider:
          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response
        registration:
          google:
            clientId: 843701827908-d6udpacknqnfoei93e1loqtlpv3fbmh8.apps.googleusercontent.com
            clientSecret: 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
            scope:
              - email
              - profile
          naver:
            client-id: awX5cDlrQyRsMMdKN1Go
            client-secret: ollmqkUxJJ
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope: name, nickname, email, profile_image
            client-name: Naver
          github:
            clientId: c9a793492dd3abcc9274
            clientSecret: d3b386b57f0ff30db97d93477abc5129baa8e47a
            scope:
              - user:email
logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
server:
  servlet:
    encoding:
      force-response: true
jwt:
  key:
    secret: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 420